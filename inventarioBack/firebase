// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyCBhHI_Oesd-EmZ--_vyqIp87bMzRhvsdY",
  authDomain: "inventario-ff7df.firebaseapp.com",
  projectId: "inventario-ff7df",
  storageBucket: "inventario-ff7df.firebasestorage.app",
  messagingSenderId: "963498163359",
  appId: "1:963498163359:web:81df95058efdf9a5e676aa",
  measurementId: "G-09K5T90H70"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const analytics = getAnalytics(app);

/*
const compression = require('compression');
const express = require('express');
const path = require('path');
const app = express();

// Habilita la compresión Gzip para todas las respuestas
app.use(compression());

// Sirve los archivos estáticos de tu build de React
app.use(express.static(path.join(__dirname, 'dist'))); // Ajusta 'dist' si tu carpeta de build es otra

// Todas las demás rutas devuelven el index.html para el enrutamiento del lado del cliente
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'dist', 'index.html'));
});

const port = process.env.PORT || 3001;
app.listen(port, () => {
  console.log(`Servidor escuchando en el puerto ${port}`);
});
*/
/*
// Ejemplo en el servidor Node.js/Express
const cors = require('cors');
// ...
app.use(cors({
  origin: 'https://tu-dominio-frontend.com', // O la URL de desarrollo como 'http://localhost:3000'
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'], // Métodos permitidos
  allowedHeaders: ['Content-Type', 'Authorization'], // Cabeceras permitidas
}));
*/
